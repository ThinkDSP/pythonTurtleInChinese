'''
ryClock.py

呂仁園 中文程式翻譯

2014/05/19

'''
#!/usr/bin/env python3
# -*- coding: cp1252 -*-
"""       turtle-example-suite:

             tdemo_clock.py

Enhanced clock-program, showing date
and time
  ------------------------------------
   Press STOP to exit the program!
  ------------------------------------
"""
#from turtle import *

from turtle_tc import *

from datetime import datetime as 日期時間

#模式("logo")

def 跳(距離, 角度=0):

    提筆()
    右轉(角度)
    前進(距離)
    左轉(角度)
    下筆()

def 指針(長度, 針尖尺寸):

    前進(長度*1.15)
    右轉(90)
    前進(針尖尺寸/2.0)
    左轉(120)
    前進(針尖尺寸)
    左轉(120)
    前進(針尖尺寸)
    左轉(120)
    前進(針尖尺寸/2.0)

def 做指針形狀(名, 長度, 針尖尺寸):

    重設()
    跳(-長度*0.15)
    開始多邊形()
    指針(長度, 針尖尺寸)
    結束多邊形()
    指針形狀= 取多邊形()
    登記形狀(名, 指針形狀)


def 鐘面(半徑):

    重設()
    筆大小(7)
    for i in 範圍(60):
        跳(半徑)
        if i % 5 == 0:
            前進(25)
            跳(-半徑-25)
        else:
            畫點(3)
            跳(-半徑)
        右轉(6)

def 設立():

    global 秒針, 分針, 時針, 寫手

    模式("logo")

    做指針形狀("秒針",  125, 25)
    做指針形狀("分針",  130, 25)
    做指針形狀("時針",  90, 25)
    鐘面(160)

    秒針= 龜類()
    秒針.形狀("秒針")
    秒針.顏色("gray20", "gray80")

    分針= 龜類()
    分針.形狀("分針")
    分針.顏色("blue1", "red1")

    時針= 龜類()
    時針.形狀("時針")
    時針.顏色("blue3", "red3")

    for 指針 in 秒針, 分針, 時針:
        指針.重設大小模式("user")
        指針.形狀大小(1, 1, 3)
        指針.速度(0)

    藏龜()

    寫手= 龜類()
    #寫手.模式("logo")
    寫手.藏龜()
    寫手.提筆()
    寫手.後退(85)


def 星期(現在時刻):

    星期 = ["拜一", "拜二", "拜三", "拜四", "拜五", "拜六", "拜日"]

    return 星期[現在時刻.weekday()]

def 日期(現在時刻):

    月份= ['正', '二', '三','四','五','六',
           '七','八','九','十','十一','十二']

    年= 現在時刻.year
    月= 月份[現在時刻.month - 1]
    日= 現在時刻.day

    return "%d 年 %s 月 %d 日" % (年, 月, 日)

def 滴答():

    global 寫手

    現在時刻= 日期時間.today()

    秒= 現在時刻.second
    分= 現在時刻.minute + 秒/60.0
    時= 現在時刻.hour   + 分/60.0

    追蹤更新畫面(False)

    寫手.清除()
    寫手.回家()
    寫手.前進(65)
    寫手.寫(星期(現在時刻))
    寫手.後退(150)
    寫手.寫(日期(現在時刻))
    寫手.前進(85)

    追蹤更新畫面(True)

    秒針.設頭向(6*秒)
    分針.設頭向(6*分)
    時針.設頭向(30*時)

    追蹤更新畫面(True)

    在計時後(滴答, 100)

def 主函數():

    追蹤更新畫面(False)
    設立()
    追蹤更新畫面(True)
    滴答()
    return "進入主迴圈"

if __name__ == "__main__":

    m= 主函數()
    印(m)
    進入主迴圈()
